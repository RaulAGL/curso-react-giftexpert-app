{"version":3,"sources":["reportWebVitals.js","components/AddCategory.js","components/GiftGridItem.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevValue","type","value","onChange","target","GiftGridItem","title","url","id","className","src","alt","getGifts","category","a","fetch","response","json","data","map","img","images","downsized","GiftGrid","loading","state","setState","useEffect","setTimeout","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,cCwBCQ,EA3BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,OAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAmBO,OAC1CN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OACJC,MAAOT,EACRU,SAlBU,SAACP,GAAO,IACtBM,EAASN,EAAEQ,OAAXF,MACPR,EAAcQ,S,QCMPG,EAbM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,IAAa,EAARC,GAE9B,OACI,mCACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKH,EAAKI,IAAKL,IACpB,4BAAIA,U,uBCNPM,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEdP,EAFc,0DAE2CM,EAF3C,oBAFR,oCAEQ,SAIGE,MAAMR,GAJT,cAIdS,EAJc,gBAKCA,EAASC,OALV,uBAKbC,EALa,EAKbA,KALa,kBAObA,EAAKC,KAAK,SAAAC,GACb,MAAO,CACHZ,GAAIY,EAAIZ,GACRF,MAAQc,EAAId,MACZC,IAAKa,EAAIC,OAAOC,UAAUf,SAXd,2CAAH,sDCqBNgB,EAnBE,SAAC,GAAiB,IAAfV,EAAc,EAAdA,SAAc,ECDL,SAACA,GAAc,IAAD,EAEdrB,mBAAS,CAC9B0B,KAAO,GAAIM,SAAU,IAHc,mBAEhCC,EAFgC,KAE1BC,EAF0B,KAmBvC,OAZAC,qBAAU,WAEVC,YAAY,WACRhB,EAASC,GAAU7B,MAAK,SAAAqC,GACpBK,EAAS,CACLR,KAAMG,EACNG,SAAS,SAGnB,OACA,CAACX,IAEIY,EDhBiBI,CAAchB,GAA/BK,EAFuB,EAEvBA,KAAMM,EAFiB,EAEjBA,QAEb,OACI,qCACI,oBAAIf,UAAU,wCAAd,SAAuDI,IACrDW,GAAW,mBAAGf,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SAEQS,EAAKC,KAAK,SAACC,GAAD,OAAU,cAAC,EAAD,eAA+BA,GAAZA,EAAIZ,aEYhDsB,EArBM,WAAO,IAAD,EAEYtC,mBAAS,CAAC,sBAFtB,mBAEhBuC,EAFgB,KAELxC,EAFK,KAMvB,OACI,qCACI,+CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAExBwC,EAAWZ,KAAK,SAACN,GACb,OAAO,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,UCb1CmB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.c26128f0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport  {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('Hi!');\n\n    const handleInputValue = (e) => {\n        const {value} = e.target;\n        setInputValue(value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(prevValue => [inputValue,...prevValue])\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\"\n                    value={inputValue}\n                   onChange={handleInputValue}/>\n        </form>\n    );\n}\n\nexport default AddCategory;\n\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired\n}\n\n","\nimport React from 'react';\n\nconst GiftGridItem = ({title,url, id}) => {\n\n    return (\n        <>\n            <div className=\"card animate__animated animate__fadeIn  \">\n                <img src={url} alt={title}/>\n                <p>{title}</p>\n            </div>\n        </>\n    );\n}\n\n\nexport default GiftGridItem;\n","\nconst api_key = 'z6j0PqgkESBaeEzaPPPsVlbT7w7BfgFr';\n\nexport const getGifts = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${category}&api_key=${api_key}`;\n\n    const response = await fetch(url);\n    const {data} = await response.json();\n\n    return data.map( img => {\n        return {\n            id: img.id,\n            title : img.title,\n            url: img.images.downsized.url\n        }\n    });\n\n\n}\n","import React from 'react';\nimport GiftGridItem from \"./GiftGridItem\";\nimport {useFetchGifts} from \"../hooks/useFetchGifts\";\n\n\nconst GiftGrid = ({ category}) => {\n\n    const {data, loading} = useFetchGifts(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__backInLeft\">{category}</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Cargando</p> }\n            <div className=\"card-grid\">\n                {\n                    data.map( (img) => (<GiftGridItem key={img.id} {...img} />    ) )\n                }\n            </div>\n        </>\n    )\n\n}\n\n\nexport default GiftGrid;\n\n\n","\nimport  {useState, useEffect} from 'react';\nimport {getGifts} from \"../helpers/getGifts\";\n\nexport const useFetchGifts = (category) => {\n\n    const [state,setState] = useState({\n        data : [], loading : true\n    });\n\n\n    useEffect(() => {\n\n    setTimeout( () => {\n        getGifts(category).then(images => {\n            setState({\n                data: images,\n                loading: false\n            })\n        })\n    },5000)\n    },[category])\n\n    return state\n}\n","\n\nimport React, {useState} from 'react'\nimport AddCategory from \"./components/AddCategory\";\nimport GiftGrid from \"./components/GiftGrid\";\n\nconst GifExpertApp = () => {\n\n    const [categories,setCategories] = useState(['Horizon Zero Dawn']);\n\n\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories} />\n            {\n                categories.map( (category) => {\n                    return <GiftGrid key={category} category={category} />\n                })\n            }\n        </>\n    );\n}\n\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from \"./GiftExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}